image: python:3.10-bullseye

pipelines:
  branches:
    release/development:
      - step:
          name: Unit tests
          runs-on:
            - 'runner2'
          services: 
            - docker
          script:
            - export TESTCONTAINERS_RYUK_DISABLED=true
            - curl -s https://packagecloud.io/install/repositories/github/git-lfs/script.deb.sh | bash
            - apt-get install git-lfs -y
            - git lfs install
            - git clone https://huggingface.co/sentence-transformers/all-mpnet-base-v2 models/all-mpnet-base-v2
            - pip install --no-cache-dir -r requirements.txt
            - coverage run test_melange_extractor.py
            - coverage report -i
            - coverage xml -i
          artifacts:
            - coverage.xml
      - step:
          name: Fetch .env file from S3
          image: amazon/aws-cli
          script:
            - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            - aws configure set default.region ${AWS_REGION}
            - aws s3 cp s3://${ENVS}/${BITBUCKET_REPO_SLUG}/dev.env .env
          artifacts:
            - .env
      - step:
          name: Code review
          runs-on:
            - 'runner2'
          size: 2x
          image: jetbrains/qodana-python
          script:
            - qodana --results-dir=${BITBUCKET_CLONE_DIR}/.qodana --report-dir=${BITBUCKET_CLONE_DIR}/.qodana/report --coverage-dir=${BITBUCKET_CLONE_DIR}
          artifacts:
            - .qodana/report  
      - step:
          name: Building & pushing Docker image
          runs-on:
            - 'runner2'
          size: 2x
          services:
            - docker-build
          script:
            - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
            - docker build . -t ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev-${BITBUCKET_COMMIT::7}-${BITBUCKET_BUILD_NUMBER}
            - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev-${BITBUCKET_COMMIT::7}-${BITBUCKET_BUILD_NUMBER}
            - docker tag ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev-${BITBUCKET_COMMIT::7}-${BITBUCKET_BUILD_NUMBER} ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev
            - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:dev
      - step:
          name: "Deployment (dev)"
          runs-on:
            - 'runner2'
          deployment: dev
          script:           
          - pipe: atlassian/scp-deploy:1.4.1
            variables:
              USER: ${DEFAULT_SSH_USER}
              SERVER: ${HOST}
              SSH_KEY: ${DEFAULT_SSH_KEY}
              REMOTE_PATH: '/home/${DEFAULT_SSH_USER}'
              LOCAL_PATH: 'docker-compose.yaml'
              EXTRA_ARGS: ["-P", "${DEFAULT_SSH_PORT}", "-o", "StrictHostKeyChecking=no"]
              DEBUG: 'true'
          - pipe: atlassian/ssh-run:0.5.0
            variables:
              SSH_USER: ${DEFAULT_SSH_USER}
              SERVER: ${HOST}
              PORT: ${DEFAULT_SSH_PORT}
              SSH_KEY: ${DEFAULT_SSH_KEY}
              MODE: 'script'
              COMMAND: 'deploy.sh'
              ENV_VARS: >-
                ENV=dev
                DOCKERHUB_USERNAME=${DOCKERHUB_USERNAME}
                DOCKERHUB_PASSWORD=${DOCKERHUB_PASSWORD}
                BITBUCKET_REPO_SLUG=${BITBUCKET_REPO_SLUG}
                DEFAULT_SSH_USER=${DEFAULT_SSH_USER}       
      - step:
          name: "E-mail notification"
          script:
          - ALERT_TYPE="SUCCESS"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="FAIL"; fi
          - pipe: atlassian/email-notify:0.9.0
            variables:
              USERNAME: ${SMTP_USERNAME}
              PASSWORD: ${SMTP_PASSWORD}
              HOST: ${SMTP_HOST}
              PORT: ${SMTP_PORT}
              FROM: "devops@scio.systems"
              TO: "dev@scio.systems"
              SUBJECT: '${ALERT_TYPE}: Bitbucket Pipe Notification for ${BITBUCKET_REPO_SLUG} - ${BITBUCKET_BRANCH}'
    release/production:
      - step:
          name: Fetch .env file from S3
          image: amazon/aws-cli
          script:
            - aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID}
            - aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY}
            - aws configure set default.region ${AWS_REGION}
            - aws s3 cp s3://${ENVS}/${BITBUCKET_REPO_SLUG}/prod.env .env
          artifacts:
            - .env
      - step:
          name: Building & pushing Docker image
          runs-on:
            - 'runner2'
          size: 2x
          services:
            - docker-build
          script:
            - docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
            - docker build . -t ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_COMMIT::7}-${BITBUCKET_BUILD_NUMBER}
            - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_COMMIT::7}-${BITBUCKET_BUILD_NUMBER}
            - docker tag ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:${BITBUCKET_COMMIT::7}-${BITBUCKET_BUILD_NUMBER} ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:prod
            - docker push ${DOCKERHUB_USERNAME}/${BITBUCKET_REPO_SLUG}:prod
      - step:
          name: "E-mail notification"
          script:
          - ALERT_TYPE="SUCCESS"
          - if [[ $BITBUCKET_EXIT_CODE -ne 0 ]]; then ALERT_TYPE="FAIL"; fi
          - pipe: atlassian/email-notify:0.9.0
            variables:
              USERNAME: ${SMTP_USERNAME}
              PASSWORD: ${SMTP_PASSWORD}
              HOST: ${SMTP_HOST}
              PORT: ${SMTP_PORT}
              FROM: "devops@scio.systems"
              TO: "dev@scio.systems"
              SUBJECT: '${ALERT_TYPE}: Bitbucket Pipe Notification for ${BITBUCKET_REPO_SLUG} - ${BITBUCKET_BRANCH}'

definitions:
  services:
    docker-build:
      memory: 6144
      type: docker
    docker:
      memory: 3072